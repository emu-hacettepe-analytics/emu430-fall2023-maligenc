[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the germen_Obasi project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to https://github.com/emu-hacettepe-analytics/emu430-fall2023-team-germen_obasi].\nSummary\nIn this project we did in the Data Analysis course, we will use the data on happiness by year and literacy rate by year, which we received from TUIK. The happiness data according to the years we will use includes happiness rates by age groups between 2003 and 2022. The other data we will use, the literacy rate by years, includes the numbers and rates of “literate, illiterate and unknown” by gender between 2008 and 2022. The reason why we chose this data is that we want to learn the relationship between a person’s educational status and their sense of happiness. By analyzing these two data groups, we will try to determine whether there is a correlation between these two situations, and if so, what kind of relationship there is between them. As the general purpose of this project and analysis, we will try to prove that these two data, which are thought to be related to each other and seem to have a definite relationship between them, are independent of each other and there will be no correlation.\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Mehmet Ali Genç.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\nlibrary(tidyverse) # for everything :)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(rvest) # for HTML scraping\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\nlibrary(stringr) # for string processing\n\n# Define the URL to scrape\nurl &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2011-01-01,2023-12-31&sort=moviemeter,desc&num_votes=2499,&countries=TR&count=250\"  # Replace with the actual URL you want to scrape\nurl2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2010-12-31&sort=moviemeter,desc&num_votes=2500,&countries=TR&count=250\"\n\n\n\n\n# Use read_html() to read the HTML content from the URL\nhtml_content &lt;- read_html(url)\nhtml_content2 &lt;- read_html(url2)\n\n \n# extract titles (movie names) ++\ntitle_names &lt;- html_content |&gt; html_nodes('.ipc-title__text')\ntitle_names &lt;- html_text(title_names)\ntitle_names &lt;- tail(head(title_names,-1),-1)\ntitle_names &lt;- str_split(title_names, \" \", n=2)\ntitle_names &lt;- unlist(lapply(title_names, function(x) {x[2]}))\n#==================================================================\ntitle_names2 &lt;- html_content2 |&gt; html_nodes('.ipc-title__text')\ntitle_names2 &lt;- html_text(title_names2)\ntitle_names2 &lt;- tail(head(title_names2,-1),-1)\ntitle_names2 &lt;- str_split(title_names2, \" \", n=2)\ntitle_names2 &lt;- unlist(lapply(title_names2, function(x) {x[2]}))\n\ntitle &lt;- unlist(c(title_names, title_names2))\n\n\n\n# extract years ++\nyear &lt;- html_content |&gt; html_nodes('.sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(1)')\nyear &lt;- html_text(year)\nconvert_to_numeric &lt;- function(x) {\n  ifelse(grepl(\"k$\", x), as.numeric(sub(\"k$\", \"\", x)) * 1000, as.numeric(x))\n}\nyear &lt;- sapply(year, convert_to_numeric)\n#=================================================================================================\nyear2 &lt;- html_content2 |&gt; html_nodes('.sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(1)')\nyear2 &lt;- html_text(year2)\nconvert_to_numeric &lt;- function(x) {\n  ifelse(grepl(\"k$\", x), as.numeric(sub(\"k$\", \"\", x)) * 1000, as.numeric(x))\n}\nyear2 &lt;- sapply(year2, convert_to_numeric)\n\nrelease &lt;- unlist(c(year, year2))\n\n# extract the vote counts ++\nvotes &lt;- html_content |&gt; html_nodes('.sc-53c98e73-0.kRnqtn')\nvotes &lt;- html_text(votes)\nvotes &lt;- as.numeric(gsub(\"[^0-9]\", \"\", votes))\n#=================================================================================================\nvotes2 &lt;- html_content2 |&gt; html_nodes('.sc-53c98e73-0.kRnqtn')\nvotes2 &lt;- html_text(votes2)\nvotes2 &lt;- as.numeric(gsub(\"[^0-9]\", \"\", votes2))\n\n\nvote &lt;- unlist(c(votes, votes2))\n\n\n# extract the durations ++\nduration &lt;- html_content |&gt; html_nodes('.sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(2)')\nduration &lt;- html_text(duration)\nhours &lt;- as.numeric(str_extract(duration, \"\\\\d+(?=h)\"))\nhours[is.na(hours)] &lt;- 0\nminutes &lt;- as.numeric(str_extract(duration, \"\\\\d+(?=m)\"))\nminutes[is.na(minutes)] &lt;- 0\ntotal_minutes &lt;- hours * 60 + minutes\n#=================================================================================================\nduration2 &lt;- html_content2 |&gt; html_nodes('.sc-43986a27-8.jHYIIK.dli-title-metadata-item:nth-child(2)')\nduration2 &lt;- html_text(duration2)\nhours2 &lt;- as.numeric(str_extract(duration2, \"\\\\d+(?=h)\"))\nhours2[is.na(hours2)] &lt;- 0\nminutes2 &lt;- as.numeric(str_extract(duration2, \"\\\\d+(?=m)\"))\nminutes2[is.na(minutes2)] &lt;- 0\ntotal_minutes2 &lt;- hours2 * 60 + minutes2\n\n\ntotal_time &lt;- unlist(c(total_minutes, total_minutes2))\n\n\n\nrating &lt;- html_content |&gt; html_nodes('.ratingGroup--imdb-rating')\nrating &lt;- html_text(rating)\nrating &lt;- str_extract(rating, \"\\\\d+\\\\.\\\\d+\") %&gt;%as.numeric()\n#=================================================================================================\nrating2 &lt;- html_content2 |&gt; html_nodes('.ratingGroup--imdb-rating')\nrating2 &lt;- html_text(rating2)\nrating2 &lt;- str_extract(rating2, \"\\\\d+\\\\.\\\\d+\") %&gt;%as.numeric()\n\n\nratings &lt;- unlist(c(rating, rating2))\n\n#DataFrame &lt;- merge(title, release,vote, total_time, ratings)\n\n\nDataFrame &lt;- bind_cols(\n  \n  MovieTitle=title,\n  Release=release,\n  Rating = ratings,\n  Votes = vote,\n  Duration=total_time\n  \n)\n\nQues\n\nDataFrame &lt;- arrange(DataFrame,desc(Rating))\nprint(head(DataFrame))\n\n# A tibble: 6 × 5\n  MovieTitle                   Release Rating Votes Duration\n  &lt;chr&gt;                          &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 Hababam Sinifi                  1975    9.2 42513       87\n2 CM101MMXI Fundamentals          2013    9.1 46996      139\n3 Hababam Sinifi Sinifta Kaldi    1975    8.9 24370       95\n4 Tosun Pasa                      1976    8.9 24329       90\n5 Süt Kardesler                   1976    8.8 20888       80\n6 Hababam Sinifi Uyaniyor         1976    8.7 20640       94\n\nprint(tail(DataFrame))\n\n# A tibble: 6 × 5\n  MovieTitle                     Release Rating Votes Duration\n  &lt;chr&gt;                            &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n1 Enes Batur Gerçek Kahraman        2019    1.4  9513       99\n2 15/07 Safak Vakti                 2021    1.2 20608       95\n3 Müjde                             2022    1.2  9920       48\n4 Cumali Ceber 2                    2018    1.2 10229      100\n5 Reis                              2017    1   73973      108\n6 Cumali Ceber: Allah Seni Alsin    2017    1   39267      100\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 20xx - ongoing."
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm xxx, position xx, year xxx\nFirm yyy, position yyy, year yyy"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm Adopen, position Production Planning Intern, year 2022"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\nMy first assignment has two parts."
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Fall 2023] EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on October 25, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html#aasd",
    "href": "assignments/assignment-1.html#aasd",
    "title": "Assignment 1",
    "section": "(a)asd",
    "text": "(a)asd"
  },
  {
    "objectID": "assignments/assignment-1.html#basd",
    "href": "assignments/assignment-1.html#basd",
    "title": "Assignment 1",
    "section": "(b)asd",
    "text": "(b)asd"
  },
  {
    "objectID": "assignments/assignment-1.html#a-httpswww.youtube.comwatchvdgrszaemzji-i-watched-this-video-because-the-requirement-said-any-r-related-video-and-answering-the-question-might-be-fun-but-apperently-i-was-wrong-because-video-was-not-funny-and-honestly-i-cannot-say-that-i-totally-understand.-but-i-am-submitting-this-assignment-way-past-the-due-date-and-doesnt-expect-a-grade-or-a-evaluation-so-i-hope-this-silly-answer-at-least-bring-a-smile-to-your-face",
    "href": "assignments/assignment-1.html#a-httpswww.youtube.comwatchvdgrszaemzji-i-watched-this-video-because-the-requirement-said-any-r-related-video-and-answering-the-question-might-be-fun-but-apperently-i-was-wrong-because-video-was-not-funny-and-honestly-i-cannot-say-that-i-totally-understand.-but-i-am-submitting-this-assignment-way-past-the-due-date-and-doesnt-expect-a-grade-or-a-evaluation-so-i-hope-this-silly-answer-at-least-bring-a-smile-to-your-face",
    "title": "Assignment 1",
    "section": "(a) https://www.youtube.com/watch?v=DGrszAeMZJI I watched this video because the requirement said “Any R-related video” and answering the question might be fun but apperently I was wrong because video was not funny and honestly I cannot say that I totally understand. But I am submitting this assignment way past the due date, and doesn’t expect a grade or a evaluation, so I hope this silly answer at least bring a smile to your face",
    "text": "(a) https://www.youtube.com/watch?v=DGrszAeMZJI I watched this video because the requirement said “Any R-related video” and answering the question might be fun but apperently I was wrong because video was not funny and honestly I cannot say that I totally understand. But I am submitting this assignment way past the due date, and doesn’t expect a grade or a evaluation, so I hope this silly answer at least bring a smile to your face"
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "(b)",
    "text": "(b)"
  }
]