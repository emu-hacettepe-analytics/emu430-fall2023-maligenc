1 + 1
1 + 1
install.packages("rmarkdown")
x <- 1
x <- x+1
x <- x+1
print("Hello world!")
class(4)
class(T)
CLass(T)
y = log(10)
y = log(e)
y = log(10,10)
library(dslabs)
library(dslabs)
install.packages(dslabs)
install.packages("dslabs")
library(dslabs)
data(murders)
class(murders)
str(murders)
head(murders)
murders$states
murders$state
data(movielens)
str(movielens)
movielens$title
str(movielens)
movielens$userÄ±d
movielens$userId
str(murders)
seq(1, 10)
exp = 1:5
class(exp)
typeof(exp)
sort(murders$total)
index <- order(murders$total)
index
murders$states(index)
murders$state[index]
murders$state(index)
library(dslabs)
murders$state[index]
ratios = murders$total/murders$population
ratios
ratios = order(murders$total/murders$population)
murders$state[ratios]
str(murders)
x <-1
x <- x+1
x = x+1
x = 500
x < 123 or x> 654
x < 123 or x > 654
x < 123 | x > 654
x = 430
if ( x >30 ) {
print("True")
}
if ( x >30 ) {print("true")}
x = 430
if ( x >30 )
print("True")
murder_rate = order((murders$total/murders$population)*100000)
if (murders[murder_rate] < 0.5 ) {
print(murders[murder_rate])
}
murder_rate = order((murders$total/murders$population)*100000)
if (murders[murder_rate] < 0.5 ) {
print(murders$state[murder_rate])
}
murder_rate = order((murders$total/murders$population)*100000)
index = order((murders$total/murders$population)*100000)
if (murders[index] < 0.5 ) {
print(murders$state[murder_rate])
}
murder_rate = (murders$total/murders$population)*100000
if (murder_rate < 0.5 ) {
print(murders$state[murder_rate])
}
murder_rate = (murders$total/murders$population)*100000
if (murder_rate < 0.5 ) {
print(murders$state[murder_rate])
}else {
print("there is no such thing")
}
murder_rate = (murders$total/murders$population)*100000
index = order(murders$total)
if (murder_rate[index] < 0.5 ) {
print(murders$state[murder_rate])
}else {
print("there is no such thing")
}
murder_rate = (murders$total/murders$population)*100000
index = order(murders$total)
if (murder_rate[index] < 0.5 ) {
print(murders$state[index])
}else {
print("there is no such thing")
}
murder_rate = (murders$total/murders$population)*100000
index = which.min(murder_rate)
if (murder_rate[index] < 0.5 ) {
print(murders$state[index])
}else {
print("there is no such thing")
}
murder_rate = (murders$total/murders$population)*100000
index = which.min(murder_rate)
if (murder_rate[index] < 0.5 ) {
print(murders$state[index])
print(murder_rate[index])
}else {
print("there is no such thing")
}
index = order(murders(murder_rate))
index = order(murders[murder_rate])
index = order(murders$total)
a = murder_rate[index]
a = murder_rate[index]
ifelse(murder_rate[index] < 0.5, print(murders$state[index]) , NA )
data(na_example)
force(na_example)
calculate_rect_area <- function(width, height){
area <- width * height # calculate area
area
}
calculate_rect_area(3,3)
calculate_rect_area(3,3)
df <- data.frame(x = 1:4, y = 5:8, z = 10:13)
View(df)
View(df)
apply(x = df, margin = 1, fun = sum)
apply(df, 1, sum)
